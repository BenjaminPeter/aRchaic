bases_freq <- tapply(file[,7], leftflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_left <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_left_mat <- rbind(bases_freq_mixcomp_left_mat, bases_freq_mixcomp_left)
rightflankcomp <- substring(muts, 6, 6)
bases_freq <- tapply(file[,7], rightflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_right <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_right_mat <- rbind(bases_freq_mixcomp_right_mat, bases_freq_mixcomp_right)
mutations <- substring(muts, 2, 5)
mutations_freq <- tapply(file[,7], mutations, sum)
mutations_freq <- mutations_freq[match(c("C->T", "C->G", "C->A", "T->C", "T->A", "T->G"), names(mutations_freq))]
mutations_freq_mixcomp <- mutations_freq/sum(mutations_freq)
mutations_freq_mixcomp_mat <- rbind(mutations_freq_mixcomp_mat, mutations_freq_mixcomp)
}
bases_freq_mixcomp_left_mean <- colMeans(bases_freq_mixcomp_left_mat)
bases_freq_mixcomp_right_mean <- colMeans(bases_freq_mixcomp_right_mat)
mutations_freq_mixcomp_mean <- colMeans(mutations_freq_mixcomp_mat)
base_probs_temp <- list()
base_probs_temp[[1]] <- bases_freq_mixcomp_left_mean
base_probs_temp[[3]] <- bases_freq_mixcomp_right_mean
base_probs_temp[[2]] <- mutations_freq_mixcomp_mean
#names(base_probs_temp[[1]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[3]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[2]]) <- c("C->T", "C->A", "C->G", "T->A", "T->C", "T->G")
modfiles <- list.files("../data/moderns_lite_lite/", pattern = ".csv")
bases_freq_mixcomp_left_mat <- c()
bases_freq_mixcomp_right_mat <- c()
mutations_freq_mixcomp_mat <- c()
for(f in 1:length(files)){
file <- read.csv(paste0("../data/moderns_lite_lite/", modfiles[f]),header=FALSE)
muts <- file[,1]
leftflankcomp <- substring(muts, 1, 1)
bases_freq <- tapply(file[,7], leftflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_left <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_left_mat <- rbind(bases_freq_mixcomp_left_mat, bases_freq_mixcomp_left)
rightflankcomp <- substring(muts, 6, 6)
bases_freq <- tapply(file[,7], rightflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_right <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_right_mat <- rbind(bases_freq_mixcomp_right_mat, bases_freq_mixcomp_right)
mutations <- substring(muts, 2, 5)
mutations_freq <- tapply(file[,7], mutations, sum)
mutations_freq <- mutations_freq[match(c("C->T", "C->G", "C->A", "T->C", "T->A", "T->G"), names(mutations_freq))]
mutations_freq_mixcomp <- mutations_freq/sum(mutations_freq)
mutations_freq_mixcomp_mat <- rbind(mutations_freq_mixcomp_mat, mutations_freq_mixcomp)
}
bases_freq_mixcomp_left_mean <- colMeans(bases_freq_mixcomp_left_mat)
bases_freq_mixcomp_right_mean <- colMeans(bases_freq_mixcomp_right_mat)
mutations_freq_mixcomp_mean <- colMeans(mutations_freq_mixcomp_mat)
base_probs_temp <- list()
base_probs_temp[[1]] <- bases_freq_mixcomp_left_mean
base_probs_temp[[3]] <- bases_freq_mixcomp_right_mean
base_probs_temp[[2]] <- mutations_freq_mixcomp_mean
#names(base_probs_temp[[1]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[3]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[2]]) <- c("C->T", "C->A", "C->G", "T->A", "T->C", "T->G")
modfiles <- list.files("../data/moderns_lite_lite/", pattern = ".csv")
bases_freq_mixcomp_left_mat <- c()
bases_freq_mixcomp_right_mat <- c()
mutations_freq_mixcomp_mat <- c()
for(f in 1:length(modfiles)){
file <- read.csv(paste0("../data/moderns_lite_lite/", modfiles[f]),header=FALSE)
muts <- file[,1]
leftflankcomp <- substring(muts, 1, 1)
bases_freq <- tapply(file[,7], leftflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_left <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_left_mat <- rbind(bases_freq_mixcomp_left_mat, bases_freq_mixcomp_left)
rightflankcomp <- substring(muts, 6, 6)
bases_freq <- tapply(file[,7], rightflankcomp, sum)
bases_freq <- bases_freq[match(c("A", "C", "G", "T"), names(bases_freq))]
bases_freq_mixcomp_right <- bases_freq/sum(bases_freq)
bases_freq_mixcomp_right_mat <- rbind(bases_freq_mixcomp_right_mat, bases_freq_mixcomp_right)
mutations <- substring(muts, 2, 5)
mutations_freq <- tapply(file[,7], mutations, sum)
mutations_freq <- mutations_freq[match(c("C->T", "C->G", "C->A", "T->C", "T->A", "T->G"), names(mutations_freq))]
mutations_freq_mixcomp <- mutations_freq/sum(mutations_freq)
mutations_freq_mixcomp_mat <- rbind(mutations_freq_mixcomp_mat, mutations_freq_mixcomp)
}
bases_freq_mixcomp_left_mean <- colMeans(bases_freq_mixcomp_left_mat)
bases_freq_mixcomp_right_mean <- colMeans(bases_freq_mixcomp_right_mat)
mutations_freq_mixcomp_mean <- colMeans(mutations_freq_mixcomp_mat)
base_probs_temp <- list()
base_probs_temp[[1]] <- bases_freq_mixcomp_left_mean
base_probs_temp[[3]] <- bases_freq_mixcomp_right_mean
base_probs_temp[[2]] <- mutations_freq_mixcomp_mean
#names(base_probs_temp[[1]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[3]]) <- c("A", "C", "G", "T")
#names(base_probs_temp[[2]]) <- c("C->T", "C->A", "C->G", "T->A", "T->C", "T->G")
base_probs_temp
save(base_probs_temp, file = "../rda/base_probs_temp.rda")
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
library(aRchaic)
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
base_probs_temp
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE),
output_dir = "../utilities/modern_Tibetans/clus_4/")
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
output_dir = "../utilities/modern_Tibetans/clus_4/")
levels
levels <- unique(labs)
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
levels <- c("R", "M", "K", "S", "moderns")
clus_out <- aRchaic_cluster(folders = folders,
K = 4,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_4/")
clus_out <- aRchaic_cluster(folders = folders,
K = 3,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_3/")
clus_out <- aRchaic_cluster(folders = folders,
K = 2,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(renyi_alpha = 2,
use_log = FALSE,
base_probs_list = base_probs_temp),
output_dir = "../utilities/modern_Tibetans/clus_2/")
library(aRchaic)
library(Logolas)
library(CountClust)
setwd("~/Documents/ancient-damage/R")
folders <- c("../data/Pinhasi/", "../data/Lazaridis/", "../data/moderns_lite/")
files <- list.files(folders[1], pattern = ".csv")
labs_skoglund <- substring(paste0(files),1,3)
labs <- c(rep("Pinhasi (non UDG)", 12),
rep("Lazaridis (UDG)", 9), rep("moderns", 50))
levels <- unique(labs)
clus_out <- aRchaic_cluster(folders = folders,
K = 3,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(use_log = TRUE),
output_dir = "../utilities/modern_Pinhasi_Lazaridis/clus_3/")
folders <- c("../data/Lazaridis/", "../data/moderns_lite/")
files <- list.files(folders[1], pattern = ".csv")
labs_skoglund <- substring(paste0(files),1,3)
labs <- c(rep("Lazaridis (UDG)", 9), rep("moderns", 50))
levels <- unique(labs)
clus_out <- aRchaic_cluster(folders = folders,
K = 3,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(use_log = TRUE),
output_dir = "../utilities/modern_Pinhasi_Lazaridis/clus_3/")
folders <- c("../data/Lazaridis/", "../data/moderns_lite/")
files <- list.files(folders[1], pattern = ".csv")
labs_skoglund <- substring(paste0(files),1,3)
labs <- c(rep("Lazaridis (UDG)", 9), rep("moderns", 50))
levels <- unique(labs)
files <- list.files(folders[1], pattern = ".csv")
labs_skoglund <- substring(paste0(files),1,3)
labs <- c(rep("Lazaridis (UDG)", 9), rep("moderns", 50))
levels <- unique(labs)
labs()
labs
levels
folders
clus_out <- aRchaic_cluster(folders = folders,
K = 3,
labs = labs,
levels = levels,
tol = 10,
run_from = "plot",
logo.control = list(use_log = TRUE),
output_dir = "../utilities/modern_Pinhasi_Lazaridis/clus_3/")
clus_out <- aRchaic_cluster(folders = folders,
K = 3,
labs = labs,
levels = levels,
tol = 10,
run_from = "gom",
logo.control = list(use_log = TRUE),
output_dir = "../utilities/modern_Pinhasi_Lazaridis/clus_3/")
devtools::install_github("kkdey/Logolas")
library(Logolas)
logomaker
remove.packages("Logolas")
setwd("~/Documents/ancient-damage/R")
topic_clus <- get(load("../utilities/Lazaridis_moderns/clus_2/model.rda"))
dim(topic_clus)
length(topic_clus)
topic <- topic_clus[[2]]
topic
topic <- topic_clus[[2]]
omega <- topic$omega
theta <- topic$theta
topic_clus <- get(load("../utilities/Lazaridis_moderns/clus_2/model.rda"))
topic_clus
omega <- topic_clus$omega
theta <- topic_clus$theta
dim(omega)
dim(theta)
maptpx::predict.topics(new_count, topic_clus)
maptpx::predict.topics(new_count[1:4,], topic_clus)
maptpx::predict.topics(new_count[1,], topic_clus)
maptpx::predict.topics(t(new_count[1,]), topic_clus)
maptpx::predict.topics(topic_clus, new_count)
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, 200] <- 1
maptpx::predict.topics(topic_clus, new_count)
dim(new_count)
which(new_count[1,]==1)
rownames(topic_clus$theta)[which(new_count[1,]==1)]
rownames(topic_clus$omega)[1:5]
rownames(topic_clus$omega)
topic_clus$omega[51:59,]
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, 200] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[2,]==1)]
rownames(topic_clus$theta)[which(new_count[1,]==1)]
rownames(topic_clus$theta)[which(new_count[3,]==1)]
rownames(topic_clus$theta)[which(new_count[4,]==1)]
dmultinom(new_count[4,], topic_clus$theta[,2])
dmultinom(new_count[4,], prob = topic_clus$theta[,2])
dmultinom(new_count[4,], prob = topic_clus$theta[,1])
dmultinom(new_count[3,], prob = topic_clus$theta[,2])
dmultinom(new_count[3,], prob = topic_clus$theta[,1])
dmultinom(new_count[2,], prob = topic_clus$theta[,1])
dmultinom(new_count[2,], prob = topic_clus$theta[,2])
dmultinom(new_count[1,], prob = topic_clus$theta[,1])
dmultinom(new_count[1,], prob = topic_clus$theta[,2])
rownames(topic_clus$theta)
rownames(topic_clus$theta)[1000:2000]
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(997, 990)] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[3,]==1)]
dmultinom(new_count[4,], prob = topic_clus$theta[,2])
dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
a1 <- dmultinom(new_count[4,], prob = topic_clus$theta[,2])
a2 <- dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
topic_clus <- get(load("../utilities/Lazaridis_moderns/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(997, 990)] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[4,]==1)]
a1 <- dmultinom(new_count[4,], prob = topic_clus$theta[,2])
a2 <- dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
rownames(topic_clus)
rownames(topic_clus$theta)
rownames(topic_clus$theta)[1000:2000]
topic_clus <- get(load("../utilities/Lazaridis_moderns/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[4,]==1)]
a1 <- dmultinom(new_count[4,], prob = topic_clus$theta[,2])
a2 <- dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[4,]==1)]
a1 <- dmultinom(new_count[4,], prob = topic_clus$theta[,2])
a2 <- dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
topic_clus$omega
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
maptpx::predict.topics(topic_clus, new_count)
rownames(topic_clus$theta)[which(new_count[4,]==1)]
a1 <- dmultinom(new_count[4,], prob = topic_clus$theta[,1])
a2 <- dmultinom(new_count[4,], prob = topic_clus$theta[,2])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
a1 <- dmultinom(new_count[2,], prob = topic_clus$theta[,1])
a2 <- dmultinom(new_count[2,], prob = topic_clus$theta[,2])
a_pool <- c(a1, a2)
a_pool/sum(a_pool)
new_count[2,]
rownames(topic_clus$theta)[which(new_count[2,]==1)]
class(topics)
class(topic_clus)
source('~/Documents/aRchaic/R/read_memberships.R')
out <- read_memberships(topic_clus, new_count, method = "multi")
out
out <- read_memberships(topic_clus, new_count, method = "lik")
out
source('~/Documents/aRchaic/R/read_memberships.R')
out <- read_memberships(topic_clus, new_count, method = "multi")
source('~/Documents/aRchaic/R/read_memberships.R')
out <- read_memberships(topic_clus, new_count, method = "lik")
out
out <- read_memberships(topic_clus, new_count, method = "map")
out
rownames(new_count) <- paste0("reads-", 1:4)
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out <- read_memberships(topic_clus, new_count, method = "map")
out
out
rownames(theta)[which(new_count[1,] > 0)]
paste0(rownames(theta)[which(new_count[1,] > 0)], collapse = ";")
paste0(rownames(theta)[which(new_count[1,] > 0)], collapse = " ; ")
source('~/Documents/aRchaic/R/read_memberships.R')
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out
class(out)
source('~/Documents/aRchaic/R/read_memberships.R')
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out <- read_memberships(topic_clus, new_count, method = "map")
source('~/Documents/aRchaic/R/read_memberships.R')
source('~/Documents/aRchaic/R/read_memberships.R')
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out
source('~/Documents/aRchaic/R/read_memberships.R')
out <- read_memberships(topic_clus, new_count, method = "lik")
out
round(0.863871153084987, 4)
round(3e-14, 4)
source('~/Documents/aRchaic/R/read_memberships.R')
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out
topic_clus <- get(load("../utilities/moderns_Pinhasi/clus_2/model.rda"))
omega <- topic_clus$omega
theta <- topic_clus$theta
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1997, 1990)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out
source('~/Documents/aRchaic/R/read_memberships.R')
out <- read_memberships(topic_clus, new_count, method = "map")
out
rownames(topic_clus$theta)
rownames(topic_clus$theta)[1000:2000]
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1934)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out <- read_memberships(topic_clus, new_count, method = "map")
out
new_count <- matrix(0, ncol = dim(theta)[1], nrow = 5)
new_count[1, c(1, 100)] <- 1
new_count[2, c(1001)] <- 1
new_count[3, c(5000, 9000)] <- 1
new_count[4, c(1933)] <- 1
rownames(new_count) <- paste0("reads-", 1:5)
out <- read_memberships(topic_clus, new_count, method = "lik")
out <- read_memberships(topic_clus, new_count, method = "map")
out
out <- read_memberships(topic_clus, new_count, method = "lik")
out
