% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aRchaic_pca_beta.R
\name{aRchaic_pca_beta}
\alias{aRchaic_pca_beta}
\title{Performs Principal Component Analysis (PCA) of MFF samples using filtered aDNA damage
patterns}
\usage{
aRchaic_pca_beta(folders, labs = NULL, type = c("mutation",
  "mutation-flank", "mutation-pos", "mutation-flank-pos",
  "specific-mutation-pos", "wo-strand", "wo-strand-break"),
  run_from = c("start", "pca"), run_index = NULL, breaks = c(-1, seq(1,
  20, 1)), flanking_bases = 1, pattern = NULL, max_pos = 20,
  normalize = TRUE, cols = c("red", "blue", "darkgoldenrod1", "cyan",
  "firebrick", "green", "hotpink", "burlywood", "darkkhaki", "yellow",
  "darkgray", "deepskyblue", "brown4", "darkorchid", "magenta", "azure1",
  "azure4"), pcs_to_plot = c("PC1", "PC2", "PC3"), lay = NULL,
  plot_width = 10, plot_height = 7, output_dir = NULL,
  output_name = "pca")
}
\arguments{
\item{folders}{a vector of folder names hosting the MFF files. Each folder may represent
MFF files from same source sequenced and analysed together. (see vignette for
examples)}

\item{labs}{The labels used to group the samples in visualization. May be used to distinguish
samples from different labs, or different library prep.}

\item{type}{The type of filtering mechanism used. The possible options are
- \code{mutation} : just the mutations (C->T, C->G, C->A, T->A, T->C and T->G)
- \code{mutation-flank}: the mutation and flanking base features
- \code{mutation-pos}: the mutation and position of the mutation from the nearest end of read.
- \code{mutation-flank-pos}: mutation + flanking base + position from nearest end of read
- \code{specific-mutation-pos}: specific mutation (say C->T) + position of that mutation from nearest end of read
- \code{wo-strand}: all features except strand feature
- \code{wo-strand-break}: all features except the strand break feature}

\item{run_from}{Can take one of two terms - \code{start} and \code{pca}. For \code{start},
the function will perform all steps - processing the MFF files, PCA fitting
and visualization from scratch. For \code{pca}, the function will first check
if the processed files are present already from previous run or from aRchaic_pool().
If present, it will use the processed files to run PCA, save the model
as \code{pca.rda} file in the \code{output_dir} and then do subsequent
visualization.}

\item{run_index}{The index vector of files to be included for each folder in the vector \code{folders}.
Defaults to using all files in the folder.}

\item{breaks}{The breaks used for binning the distance from ends of the reads of the mutations, when
processing the MFF files. Defaults to assigning each base as one bin from
end of the read to 20 bases.}

\item{flanking_bases}{The numbe rof flanking bases to the mutation considered. Defaults to 1.}

\item{pattern}{type of mutation (say "C->T"). Comes into play when \code{type} is \code{specific-mutation-pos}.
Defaults to NULL.}

\item{max_pos}{The maximum distance from ends of read that a mismatch would be considered.
The rest will be filtered out. Defaults to 20.}

\item{normalize}{If \code{normalize = FALSE}), original data is used for fitting PCA, else
log CPM normalized data is used. Defaults to TRUE.}

\item{cols}{colors attributed to each label in the \code{labs} vector.}

\item{pcs_to_plot}{a vector of the indicators of which PCs to plot. For example
\code{pcs_to_plot = c("PC1", "PC2", "PC3")} will plot three scatter
plots of PC1 vs PC2, PC1 vs PC3 and PC2 vs PC3.}

\item{lay}{A layout matrix. Defaults to to the upper diagonal layout. For other
options, check \code{grid.arrange} page
(https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html).}

\item{plot_width}{The width of the PCA plot figure.}

\item{plot_height}{The height of the PCA plot figure.}

\item{output_dir}{The output directory where the model and the PCA plot figure are saved.
If NULL, it picks the current working directory.}

\item{output_name}{The name of the PCA figure.}
}
\value{
For the \code{start} option of \code{run_from}, the function processes the MFF files
in each folder, aggregates them into a matrix, filters the signatures by the \code{type} of
the mutational signature and then fits PCA and saves the PCA plot.
}
\description{
Performs principal component analysis on the aDNA samples using
filtered DNA damage patterns,which comprises of some subset of the 5 features (mutation,
flanking base, distance from read end, strand and strand break) but not all of them.
The function fits the PCA and saves the PCA output and the plot in the output directory.
}
\keyword{aRchaic_pca}
